package sas_systems.unveiled.server;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DatabaseConnector {
	
	private static final Logger LOG = LoggerFactory.getLogger(DatabaseConnector.class);
	
	private static final String USER = "unveiled";
	private static final String PASSWORD = "?";
	private static final String DB_HOST = "sas.systemgrid.de" /*"185.5.10.12"*/;
	private static final String DB_NAME = "unveiled";
	
	private Connection conn;

	public DatabaseConnector() {
		final String jdbcConnection = "jdbc:mysql://" + DB_HOST + "/" + DB_NAME + "?useSSL=false" /*&user=" + USER + "&password=" + PASSWORD*/;
		try {
			Class.forName("com.mysql.jdbc.Driver" /*"com.mysql.cj.jdbc.Driver"*/).newInstance();
			conn = DriverManager.getConnection(jdbcConnection, USER, PASSWORD);
		} catch (ClassNotFoundException | IllegalAccessException | InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			close();
		}
	}
	
	public boolean insertFile(FilePOJO file) {
		final String fileTable = "file";
		final StringBuilder sql = new StringBuilder();
		
		// build sql statement
		sql.append("INSERT INTO ")
			.append(DB_NAME).append(".").append(fileTable).append(" ")
			.append("( ").append("owner_id, caption, filename, file_url, thumbnail_url, mediatype, ")
			.append("uploaded_at, size, lat, lng, public, verified, length, height, width, resolution")
			.append(" ) ")
			.append("VALUES (")
			.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ")
			.append(")");
		
		try {
			final PreparedStatement stmt = conn.prepareStatement(sql.toString(), Statement.RETURN_GENERATED_KEYS);
			
			/* append parameters:
			 * file (id, owner_id, caption, filename, file_url, thumbnail_url,
			 *   mediatype, uploaded_at, size, lat, lng, public, verified, length,
			 *   height, width, resolution)
			 * id is generated by the database!
			 */
			int i = 1;
			stmt.setInt(i++, file.getOwner_id());
			stmt.setString(i++, file.getCaption());
			stmt.setString(i++, file.getFilename());
			stmt.setString(i++, file.getFile_url());
			stmt.setString(i++, file.getThumbnail_url());
			stmt.setString(i++, file.getMediatype());
			stmt.setLong(i++, file.getUploaded_at().getTime()/1000);
			stmt.setInt(i++, file.getSize());
			stmt.setDouble(i++, file.getLat());
			stmt.setDouble(i++, file.getLng());
			stmt.setBoolean(i++, file.isPublic());
			stmt.setBoolean(i++, file.isVerfied());
			stmt.setInt(i++, file.getLength());
			stmt.setInt(i++, file.getHeigth());
			stmt.setInt(i++, file.getWidth());
			stmt.setString(i++, file.getResolution());
			
			// execute insert
			int rowCount = stmt.executeUpdate();
			if(rowCount > 0) {
				return true;
			}
		} catch (SQLException e) {
			LOG.error("could not write file metadata to database", e);
		}
		
		return false;
	}

	public void close() {
		if(conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
				LOG.error("Could not close database connection!", e);
			}
		}
	}
}
